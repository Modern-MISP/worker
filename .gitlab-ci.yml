default:
  tags:
      - concurrent
      - any-image-allowed


variables:
  LIB_REPO_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.kit.edu/${CI_PROJECT_NAMESPACE}/lib.git
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  #  CI_DEBUG_SERVICES: true
  PYTHONUNBUFFERED: true

stages:
  - build_image
  - test
  - coverage
  - docs

cache:
  paths:
    - .cache/pip

build_image:
  needs: [ ]
  before_script: [ ]
  stage: build_image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  script:
    - mkdir -p /kaniko/.docker
    - >-
      echo '{"auths":{"https://registry.cert.kit.edu/v2/":{"auth": "'$(echo -n ${REGISTRY_USER}:${REGISTRY_PASSWORD} | base64 -w 0)'" }}}' > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg LIB_REPO_URL=${LIB_REPO_URL}
      --build-arg BRANCH=${CI_COMMIT_BRANCH}
      --build-arg INSTALL_LIB=true
      --destination ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_BRANCH}
      --destination ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  variables:
    KUBERNETES_MEMORY_REQUEST: "1Gi"
    KUBERNETES_MEMORY_LIMIT: "1Gi"

generate_mkdocs:
  before_script: [ ]
  needs: [ ]
  stage: docs
  image: registry.cert.kit.edu/public-gitlab-ci/mkdocs
  script:
    - source /root/.venv/bin/activate; PYTHONPATH=src mkdocs build
  artifacts:
    paths:
      - site
  services:
    - name: plantuml/plantuml-server
      alias: plantuml

pytest_smtp:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    #    - mmisp-db setup --create_init_values=False
    - until wget --spider http://api:4000/docs; do rc="$?"; if [ $rc -eq 0 ]; then echo "MMISP API is ready"; break; else sleep 5; fi; done
    - pytest --junitxml=report.xml --cov --cov-report= tests/with_smtp
  artifacts:
      when: always
      paths:
        - ".coverage.*"
      reports:
        junit: report.xml
  services:
    - name: valkey/valkey:7.2
      command: [ "--requirepass 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ" ]
      alias: redis
      variables:
        KUBERNETES_SERVICE_CPU_REQUEST: "100m"
        KUBERNETES_SERVICE_CPU_LIMIT: "200m"
    - name: mariadb:11.5
      alias: db
      variables:
        KUBERNETES_SERVICE_CPU_REQUEST: "100m"
        KUBERNETES_SERVICE_CPU_LIMIT: "250m"
    - name: rnwood/smtp4dev:latest
      alias: smtp4dev
      variables:
        HEALTHCHECK_TCP_PORT: 9000
        SERVEROPTIONS__URLS: "http://*:9000"
        SERVEROPTIONS__AUTHENTICATIONREQUIRED: true
        SERVEROPTIONS__USERS__0__USERNAME: misp
        SERVEROPTIONS__USERS__0__PASSWORD: misp-smtp
        SERVEROPTIONS__TLSMODE: StartTls
        KUBERNETES_SERVICE_CPU_REQUEST: "100m"
        KUBERNETES_SERVICE_CPU_LIMIT: "250m"
    - name: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/api:main
      alias: api
      variables:
        KUBERNETES_SERVICE_CPU_REQUEST: "300m"
        KUBERNETES_SERVICE_CPU_LIMIT: "500m"
        WORKER_COUNT: 1
        KUBERNETES_SERVICE_MEMORY_REQUEST: "700Mi"
        KUBERNETES_SERVICE_MEMORY_LIMIT: "700Mi"
  variables:
    CI_DEBUG_SERVICES: true
    COVERAGE_FILE: ".coverage.s${CI_NODE_INDEX}"
    MARIADB_ROOT_PASSWORD: misp
    MARIADB_DATABASE: misp
    DATABASE_URL: "mysql+aiomysql://root:misp@db:3306/misp"
    HASH_SECRET: hO1cfVGuFGsNwGvw9xzxnq5sU
    DEBUG: true
    REDIS_PASSWORD: 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ

    DB_API_URL: "http://api:4000"
    DB_API_KEY: "siteadminuser000000000000000000000000000"

    REDIS_HOST: redis
    API_KEY: ahx4shiequae2eir6lee8eijoo2aL3Ooko5ooBie4aeSaigooc
    API_PORT: 5000

    SMTP_HOST: smtp4dev
    SMTP_PORT: 25
    EMAIL_ADDRESS: misp@misp-smtp
    EMAIL_USERNAME: misp
    EMAIL_PASSWORD: misp-smtp

    PYTHONTRACEMALLOC: 5

pytest_redis:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - pytest --junitxml=report.xml --cov --cov-report= tests/with_redis_only
  services:
    - name: valkey/valkey:7.2
      command: [ "--requirepass 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ" ]
      alias: redis
    - name: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
      command: [ "mmisp-worker" ]
  variables:
    COVERAGE_FILE: ".coverage.r${CI_NODE_INDEX}"
    HASH_SECRET: hO1cfVGuFGsNwGvw9xzxnq5sU
    DEBUG: true
    REDIS_PASSWORD: 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ

    DB_API_URL: "http://misp-core"
    DB_API_KEY: "siteadminuser000000000000000000000000000"
    DATABASE_URL: "sqlite+aiosqlite:///mmisp-tests.db?check_same_thread=False"

    REDIS_HOST: redis
    API_KEY: ahx4shiequae2eir6lee8eijoo2aL3Ooko5ooBie4aeSaigooc
    API_PORT: 4000
    PYTHONTRACEMALLOC: 5

  artifacts:
    when: always
    paths:
      - ".coverage.*"
    reports:
      junit: report.xml

pytest_unittests:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - pytest --junitxml=report.xml --cov --cov-report= tests/unittests
  services:
    - name: mariadb:11.5
      alias: db
    - name: valkey/valkey:7.2
      command: [ "--requirepass 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ" ]
      alias: redis
  variables:
    COVERAGE_FILE: ".coverage.u${CI_NODE_INDEX}"
    MARIADB_ROOT_PASSWORD: misp
    MARIADB_DATABASE: misp
    DATABASE_URL: "sqlite+aiosqlite:///mmisp-tests.db?check_same_thread=False"
    HASH_SECRET: hO1cfVGuFGsNwGvw9xzxnq5sU
    DEBUG: true
    REDIS_PASSWORD: 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ

    DB_API_URL: "http://misp-core"
    DB_API_KEY: "siteadminuser000000000000000000000000000"

    REDIS_HOST: redis
    API_KEY: ahx4shiequae2eir6lee8eijoo2aL3Ooko5ooBie4aeSaigooc
    API_PORT: 4000

    ENRICHMENT_PLUGIN_DIRECTORY: '${CI_PROJECT_DIR}/tests/plugins/enrichment_plugins'
    CORRELATION_PLUGIN_DIRECTORY: '${CI_PROJECT_DIR}/tests/plugins/correlation_plugins'
    PYTHONTRACEMALLOC: 5
  artifacts:
    when: always
    paths:
      - ".coverage.*"
    reports:
      junit: report.xml

pytest_unittests_with_api:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - until wget --spider http://api:4000/docs; do rc="$?"; if [ $rc -eq 0 ]; then echo "MMISP API is ready"; break; else sleep 5; fi; done
    - pytest --junitxml=report.xml --cov --cov-report= tests/unittests_with_api
  services:
    - name: mariadb:11.5
      alias: db
      variables:
        MARIADB_ROOT_PASSWORD: misp
        MARIADB_DATABASE: misp
        KUBERNETES_SERVICE_CPU_REQUEST: "200m"
        KUBERNETES_SERVICE_CPU_LIMIT: "300m"
    - name: valkey/valkey:7.2
      command: [ "--requirepass 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ" ]
      alias: redis
    - name: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/api:main
      alias: api
      variables:
        KUBERNETES_SERVICE_CPU_REQUEST: "500m"
        KUBERNETES_SERVICE_CPU_LIMIT: "600m"
        WORKER_COUNT: 1
        KUBERNETES_SERVICE_MEMORY_REQUEST: "700Mi"
        KUBERNETES_SERVICE_MEMORY_LIMIT: "700Mi"
  variables:
    COVERAGE_FILE: ".coverage.u${CI_NODE_INDEX}"
    DATABASE_URL: "mysql+aiomysql://root:misp@db:3306/misp"
    HASH_SECRET: hO1cfVGuFGsNwGvw9xzxnq5sU
    DEBUG: true
    REDIS_PASSWORD: 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ

    DB_API_URL: "http://api:4000"
    DB_API_KEY: "siteadminuser000000000000000000000000000"

    REDIS_HOST: redis
    API_KEY: ahx4shiequae2eir6lee8eijoo2aL3Ooko5ooBie4aeSaigooc
    API_PORT: 4000

    ENRICHMENT_PLUGIN_DIRECTORY: '${CI_PROJECT_DIR}/tests/plugins/enrichment_plugins'
    CORRELATION_PLUGIN_DIRECTORY: '${CI_PROJECT_DIR}/tests/plugins/correlation_plugins'
    PYTHONTRACEMALLOC: 5
  artifacts:
    when: always
    paths:
      - ".coverage.*"
    reports:
      junit: report.xml

pytest_systemtests:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - while [ ! -f "$MISP_READY_FILE" ]; do sleep 10; done
    - pytest --junitxml=report.xml --cov --cov-report= tests/system_tests
  services:
    - name: mariadb:11.5
      alias: db
      variables:
        KUBERNETES_SERVICE_CPU_REQUEST: "100m"
        KUBERNETES_SERVICE_CPU_LIMIT: "200m"
    - name: registry.cert.kit.edu/public-gitlab-ci/misp-core:latest
      alias: misp-core
      variables:
        MYSQL_PASSWORD: misp
        MYSQL_USER: root
        DISABLE_SSL_REDIRECT: true
        HEALTHCHECK_TCP_PORT: 80
        ENABLE_DB_SETTINGS: "false"
        DEBUG: 1
        KUBERNETES_SERVICE_CPU_REQUEST: "600m"
        KUBERNETES_SERVICE_CPU_LIMIT: "800m"
        KUBERNETES_SERVICE_MEMORY_REQUEST: "512Mi"
        KUBERNETES_SERVICE_MEMORY_LIMIT: "512Mi"
    - name: valkey/valkey:7.2
      command: [ "--requirepass 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ" ]
      alias: redis
      variables:
        KUBERNETES_SERVICE_CPU_REQUEST: "100m"
        KUBERNETES_SERVICE_CPU_LIMIT: "200m"
    - name: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
      command: [ "mmisp-worker" ]
  variables:
    COVERAGE_FILE: ".coverage.sys${CI_NODE_INDEX}"
    MARIADB_ROOT_PASSWORD: misp
    MARIADB_DATABASE: misp
    DATABASE_URL: "mysql+aiomysql://root:misp@db:3306/misp"
    HASH_SECRET: hO1cfVGuFGsNwGvw9xzxnq5sU
    DEBUG: true
    REDIS_PASSWORD: 1CA9kMhX6mcuhRlRAptZdQieSX6u25SJ

    DB_API_URL: "http://misp-core"
    DB_API_KEY: "siteadminuser000000000000000000000000000"

    REDIS_HOST: redis
    API_KEY: ahx4shiequae2eir6lee8eijoo2aL3Ooko5ooBie4aeSaigooc
    API_PORT: 4000

    ENRICHMENT_PLUGIN_DIRECTORY: '${CI_PROJECT_DIR}/tests/plugins/enrichment_plugins'
    CORRELATION_PLUGIN_DIRECTORY: '${CI_PROJECT_DIR}/tests/plugins/correlation_plugins'

    MISP_READY_FILE: '${CI_PROJECT_DIR}/misp_ready'

    PYTHONTRACEMALLOC: 5
    CI_DEBUG_SERVICES: true

  artifacts:
    when: always
    paths:
      - ".coverage.*"
    reports:
      junit: report.xml

pytest_coverage_combine:
  stage: coverage
  needs:
    - pytest_unittests
    - pytest_systemtests
    - pytest_smtp
    - pytest_redis
  when: always
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  script:
    - coverage combine
    - coverage xml
    - sed -i 's,/home/mmisp/.local/lib/python3.11/site-packages/,src/,' coverage.xml
    - sed -i 's,<source></source>,<source>./</source>,' coverage.xml
    - coverage report
    - coverage html
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    paths:
      - htmlcov
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# also run pytest with sqlalchemy v2
#pytest_sa2:
#  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
#  stage: test
#  script:
#    - pip install "sqlalchemy>=2.0"
#    - ENV_FILE=.env.test.lite pytest tests

mypy:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  script:
    - pip install "sqlalchemy>=2.0"
    - MYPYPATH=src python -m mypy --explicit-package-bases src/mmisp/worker

ruff:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - ruff check --no-fix

ruff_format:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - ruff format --check
