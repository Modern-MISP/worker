default:
  tags:
    - kgr1-instance-mini

variables:
  LIB_REPO_URL: https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.kit.edu/${CI_PROJECT_NAMESPACE}/lib.git
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  #  CI_DEBUG_SERVICES: true
  PYTHONUNBUFFERED: true

stages:
  - build_image
  - test
  - docs

cache:
  paths:
    - .cache/pip

build_image:
  needs: []
  before_script: []
  stage: build_image
  tags:
    - kgr1-instance-standard
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - >-
      echo '{"auths":{"https://registry.cert.kit.edu/v2/":{"auth": "'$(echo -n ${REGISTRY_USER}:${REGISTRY_PASSWORD} | base64 -w 0)'" }}}' > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg LIB_REPO_URL=${LIB_REPO_URL}
      --build-arg BRANCH=${CI_COMMIT_BRANCH}
      --build-arg INSTALL_LIB=true 
      --destination ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_BRANCH}
      --destination ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}

generate_mkdocs:
  before_script: []
  stage: docs
  image: registry.cert.kit.edu/public-gitlab-ci/mkdocs
  script:
    - source /root/.venv/bin/activate; PYTHONPATH=src mkdocs build
  artifacts:
    paths:
      - site
  services:
    - name: plantuml/plantuml-server
      alias: plantuml

pytest:
  stage: test
  script:
    - ENV_FILE=.env.test.lite pytest --cov --cov-report term --cov-report xml:coverage.xml tests
  coverage: '/TOTAL.*\s+(\d+%)$/'
  services:
    - name: mariadb:latest
      alias: db
    - name: hub.cert.kit.edu:5000/misp-core:latest
      alias: misp-core
      variables:
        MYSQL_PASSWORD: misp
        MYSQL_USER: root
        DISABLE_SSL_REDIRECT: true
    - name: valkey/valkey:7.2
      alias: redis
  variables:
    MARIADB_ROOT_PASSWORD: misp
    MARIADB_DATABASE: misp
    DATABASE_URL: "mysql+aiomysql://root:misp@db:3306/misp"
    HASH_SECRET: hO1cfVGuFGsNwGvw9xzxnq5sU
    DEBUG: true

    MMISP_DB_API_URL: "http://misp-core"
    MMISP_DB_API_KEY: VkYqJRTgwPjWbO5sEpq2YkVeewRXRFooETjE8q4J

    MMISP_REDIS_HOST: redis
    MMISP_API_PORT: 4000

  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# also run pytest with sqlalchemy v2
pytest_sa2:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - pip install "sqlalchemy>=2.0"
    - ENV_FILE=.env.test.lite pytest tests

mypy:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  script:
    - pip install "sqlalchemy>=2.0"
    - MYPYPATH=src python -m mypy --explicit-package-bases src/mmisp/worker

ruff:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - ruff check --no-fix

ruff_format:
  image: ${REGISTRY_DOMAIN}/${REGISTRY_PROJECT}/worker:${CI_COMMIT_SHA}
  stage: test
  script:
    - ruff format --check
